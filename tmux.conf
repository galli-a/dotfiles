# set terminal to 256 colors
set-option -g default-terminal "screen-256color"

# compatibility with OS X pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# enable UTF8 support
set-window-option -g utf8 on

# force a reload of the config file
unbind r
bind-key r source-file ~/.tmux.conf

# reduce delay
set-option -sg escape-time 1

# start window and pane numbering from 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# change split panes keybindings
unbind % # remove default vertical split binding
bind-key | split-window -h
bind-key - split-window -v

# smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize pane keybindings
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# mouse options
set-option -g mode-mouse on
set-window-option -g mouse-select-window on
set-window-option -g mouse-select-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mouse-resize-pane on

# allows windows to not be limited by smallest connected client
set-window-option -g aggressive-resize on

# send same commands to all panes
bind-key a set-window-option synchronize-panes

# increase history size
set-option -g history-limit 100000

# identify activity in other windows
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Copy mode
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi
bind-key ` copy-mode
unbind [
unbind p
bind-key p paste-buffer
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# status bar
set-option -g status-left-length 52
set-option -g status-right-length 451
set-option -g status-fg white
set-option -g status-bg colour234
set-option -g window-status-activity-attr bold
set-option -g pane-border-fg colour245
set-option -g pane-active-border-fg colour39
set-option -g message-fg colour16
set-option -g message-bg colour221
set-option -g message-attr bold
set-option -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set-option -g window-status-format "#[fg=white,bg=colour234] #I #W "
set-option -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

# remap prefix to Control + a
# set-option -g prefix C-a
# unbind C-b
# bind C-a send-prefix


# quick pane cycling
unbind ^A
bind-key ^A select-pane -t :.+

